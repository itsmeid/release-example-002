passed="$(tput setaf 2)✔️$(tput sgr0)"
error="$(tput setaf 1)✖️$(tput sgr0)"

echo
echo "$(tput bold)# PRE-COMMIT SCRIPT$(tput sgr0)"

# Check staged changes to commit
echo "> Check staged changes to commit"
staged=$(git diff --name-only --cached || echo "")
if [[ -z "$staged" ]]; then
  echo "$error Nothing to commit."
  echo
  exit 0
fi
echo "$passed Staged changes were found."
echo

# Check unstaged changes
echo "> Check unstaged changes from staged files"
changes=$(git status --short | grep "^MM" || echo "")
if [[ -n "$changes" ]]; then
  echo "$(tput setaf 1)$changes$(tput sgr0)"
  echo
  exit 1
fi
echo "$passed No unstaged changes."
echo

# Check files extension
ext_list="\.(js|cjs|mjs|jsx|ts|cts|mts|tsx|json|jsonc|json5|css|scss|less|sass)$"
need_checks=$(echo "$staged" | grep -E $ext_list || echo "")
if [[ -z $need_checks ]]; then
  # Check format (skipped)
  echo "> Check format on staged files..."
  echo "$passed No file to check. (skipped)"
  echo

  # Check lint (skipped)
  echo "> Check lint on staged files..."
  echo "$passed No file to check. (skipped)"
  exit 0
fi

# Check format
echo "> Check format on staged files..."
bunx biome check --fix --staged --no-errors-on-unmatched --linter-enabled=false
echo "$passed Format is OK."
echo

# Check lint
echo "> Check lint on staged files..."
bun biome lint --fix --staged --no-errors-on-unmatched
echo "$passed Lint is OK."

# Reindex staged files
git update-index --again
